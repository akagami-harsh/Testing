name: Label Checker

on:
  pull_request:
    types:
      - opened
      - synchronize

jobs:
  label_checker:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install dependencies
        run: npm install @octokit/rest

      - name: Run Label Checker
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          const core = require('@actions/core');
          const github = require('@actions/github');
          const { Octokit } = require('@octokit/rest');

          async function commentOnPullRequest() {
            try {
              const token = core.getInput('github-token');
              const octokit = new Octokit({ auth: token });

              const requiredLabels = ["feat", "fix", "docs", "style", "refactor", "perf", "test", "build", "ci", "chore", "revert"];
              const labels = github.context.payload.pull_request.labels.map(label => label.name);
              const missingLabels = requiredLabels.filter(label => !labels.includes(label));

              const prNumber = github.context.payload.pull_request.number;
              const repoOwner = github.context.repo.owner;
              const repoName = github.context.repo.repo;
              const commentBody = 'Thank you for opening this pull request! We will review it soon.';

              if (missingLabels.length > 0) {
                await octokit.issues.createComment({
                  owner: repoOwner,
                  repo: repoName,
                  issue_number: prNumber,
                  body: commentBody
                });
              }
            } catch (error) {
              core.setFailed(error.message);
            }
          }

          commentOnPullRequest();
        
